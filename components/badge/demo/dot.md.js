webpackJsonp([92],{3:function(n,a,s){"use strict";s(7),s(6)},6:function(n,a){},7:function(n,a){},198:function(n,a,s){"use strict";function t(n){return n&&n.__esModule?n:{"default":n}}function e(n){if(n&&n.__esModule)return n;var a={};if(null!=n)for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&(a[s]=n[s]);return a["default"]=n,a}function p(n,a){for(var s=Object.getOwnPropertyNames(a),t=0;t<s.length;t++){var e=s[t],p=Object.getOwnPropertyDescriptor(a,e);p&&p.configurable&&void 0===n[e]&&Object.defineProperty(n,e,p)}return n}function o(n,a,s){return a in n?Object.defineProperty(n,a,{value:s,enumerable:!0,configurable:!0,writable:!0}):n[a]=s,n}function c(n,a){if(!(n instanceof a))throw new TypeError("Cannot call a class as a function")}function r(n,a){if(!n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!a||"object"!=typeof a&&"function"!=typeof a?n:a}function l(n,a){if("function"!=typeof a&&null!==a)throw new TypeError("Super expression must either be null or a function, not "+typeof a);n.prototype=Object.create(a&&a.prototype,{constructor:{value:n,enumerable:!1,writable:!0,configurable:!0}}),a&&(Object.setPrototypeOf?Object.setPrototypeOf(n,a):p(n,a))}Object.defineProperty(a,"__esModule",{value:!0}),a["default"]=void 0;var u=s(1),i=e(u),d=s(2),k=t(d),f=function(n){function a(){return c(this,a),r(this,n.apply(this,arguments))}return l(a,n),a.prototype.render=function(){var n,a,s=this.props,t=s.text,e=s.prefixCls,p=s.overflowCount,c=s.className,r=s.style,l=s.children,u=this.props.dot,d=this.props.size,f=this.props.corner;t=t>p?p+"+":t,u&&(t="");var g=!(t&&"0"!==t||u),m=(0,k["default"])((n={},o(n,e+"-dot",u),o(n,e+"-dot-large",u&&"large"===d),o(n,e+"-text",!u&&!f),o(n,e+"-corner",f),o(n,e+"-corner-large",f&&"large"===d),n)),y=(0,k["default"])((a={},o(a,c,!!c),o(a,e,!0),o(a,e+"-not-a-wrapper",!l),o(a,e+"-corner-wrapper",f),o(a,e+"-corner-wrapper-large",f&&"large"===d),a));return i.createElement("span",{className:y,title:t},l,!g&&i.createElement("sup",{className:m,style:r},t))},a}(i.Component);a["default"]=f,f.propTypes={prefixCls:u.PropTypes.string,text:u.PropTypes.oneOfType([u.PropTypes.string,u.PropTypes.number]),dot:u.PropTypes.bool,corner:u.PropTypes.bool,overflowCount:u.PropTypes.number,size:u.PropTypes.string},f.defaultProps={prefixCls:"am-badge",text:null,dot:!1,corner:!1,overflowCount:99,size:null},n.exports=a["default"]},199:function(n,a,s){"use strict";s(3),s(34),s(219)},219:function(n,a){},707:function(n,a,s){"use strict";function t(n){return n&&n.__esModule?n:{"default":n}}var e=(s(199),s(198)),p=t(e),o=s(1),c=t(o),r=s(4);t(r);n.exports={content:[["p","\u53ea\u6709\u4e2a\u5c0f\u7ea2\u70b9\uff0c\u6ca1\u6709\u5177\u4f53\u6570\u5b57"]],meta:{order:1,title:"\u5c0f\u7ea2\u70b9",filename:"components/badge/demo/dot.md",id:"components-badge-demo-dot"},toc:["ul"],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword" >import</span> <span class="token punctuation" >{</span> Badge <span class="token punctuation" >}</span> <span class="token keyword" >from</span> <span class="token string" >\'antd-mobile\'</span><span class="token punctuation" >;</span>\n\nReactDOM<span class="token punctuation" >.</span><span class="token function" >render</span><span class="token punctuation" >(</span>\n  <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>div</span> <span class="token attr-name" >className</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>badge-container<span class="token punctuation" >"</span></span> <span class="token attr-name" >style</span><span class="token script language-javascript" ><span class="token punctuation" >=</span><span class="token punctuation" >{</span><span class="token punctuation" >{</span> padding<span class="token punctuation" >:</span> <span class="token string" >\'40px 16px\'</span> <span class="token punctuation" >}</span><span class="token punctuation" >}</span></span><span class="token punctuation" >></span></span>\n    <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>Badge</span> <span class="token attr-name" >dot</span><span class="token punctuation" >></span></span>\n      <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;</span>span</span> <span class="token attr-name" >className</span><span class="token attr-value" ><span class="token punctuation" >=</span><span class="token punctuation" >"</span>dot-example<span class="token punctuation" >"</span></span> <span class="token punctuation" >/></span></span>\n    <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>Badge</span><span class="token punctuation" >></span></span>\n  <span class="token tag" ><span class="token tag" ><span class="token punctuation" >&lt;/</span>div</span><span class="token punctuation" >></span></span>\n<span class="token punctuation" >,</span> mountNode<span class="token punctuation" >)</span><span class="token punctuation" >;</span>'}],preview:function(){return c["default"].createElement("div",{className:"badge-container",style:{padding:"40px 16px"}},c["default"].createElement(p["default"],{dot:!0},c["default"].createElement("span",{className:"dot-example"})))},style:".dot-example {\n  width: 0.56rem;\n  height: 0.56rem;\n  background: #ddd;\n  display: inline-block;\n}",highlightedStyle:'<span class="token selector" ><span class="token class" >.dot-example</span> </span><span class="token punctuation" >{</span>\n  <span class="token property" >width</span><span class="token punctuation" >:</span> <span class="token number" >0.56</span>rem<span class="token punctuation" >;</span>\n  <span class="token property" >height</span><span class="token punctuation" >:</span> <span class="token number" >0.56</span>rem<span class="token punctuation" >;</span>\n  <span class="token property" >background</span><span class="token punctuation" >:</span> <span class="token hexcode" >#ddd</span><span class="token punctuation" >;</span>\n  <span class="token property" >display</span><span class="token punctuation" >:</span> inline-block<span class="token punctuation" >;</span>\n<span class="token punctuation" >}</span>'}}});